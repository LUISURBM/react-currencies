{
    "sourceFile": "src/pages/typography/Typography.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1636912036521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1636912082450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n       payments: []\r\n     };\r\n     const requestOptions = {\r\n       method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json'\r\n-      'Authentication': 'Bearer '+localStorage.getItem('token') },\r\n+      headers: { 'Content-Type': 'application/json',\r\n+      'Authorization': 'Bearer '+localStorage.getItem('token') },\r\n       body: JSON.stringify({ title: 'React POST Request Example' })\r\n     };\r\n     fetch(\"http://localhost:8090/payment/view\", requestOptions).then((response) => response.json()).then((response) => {\r\n       this.setState({ ...this.state, payments: response });\r\n"
                },
                {
                    "date": 1636916986866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,18 +10,24 @@\n     this.state = {\r\n       payment: undefined,\r\n       payments: []\r\n     };\r\n-    const requestOptions = {\r\n-      method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json',\r\n-      'Authorization': 'Bearer '+localStorage.getItem('token') },\r\n-      body: JSON.stringify({ title: 'React POST Request Example' })\r\n-    };\r\n-    fetch(\"http://localhost:8090/payment/view\", requestOptions).then((response) => response.json()).then((response) => {\r\n-      this.setState({ ...this.state, payments: response });\r\n+    try {\r\n+      const requestOptions = {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+          'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n+        },\r\n+        body: JSON.stringify({ title: 'React POST Request Example' })\r\n+      };\r\n+      fetch(\"http://localhost:8090/payment/view\", requestOptions).then((response) => response.json()).then((response) => {\r\n+        this.setState({ ...this.state, payments: response });\r\n+      }\r\n+      );\r\n+    } catch (error) {\r\n+      \r\n     }\r\n-    );\r\n   }\r\n   render() {\r\n     return (<div>\r\n       <h1 className=\"page-title\">\r\n"
                },
                {
                    "date": 1636916999559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         this.setState({ ...this.state, payments: response });\r\n       }\r\n       );\r\n     } catch (error) {\r\n-      \r\n+      console.log(error)\r\n     }\r\n   }\r\n   render() {\r\n     return (<div>\r\n"
                },
                {
                    "date": 1636919442740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         },\r\n         body: JSON.stringify({ title: 'React POST Request Example' })\r\n       };\r\n       fetch(\"http://localhost:8090/payment/view\", requestOptions).then((response) => response.json()).then((response) => {\r\n-        this.setState({ ...this.state, payments: response });\r\n+        this.setState({ ...this.state, payments: response?.executions });\r\n       }\r\n       );\r\n     } catch (error) {\r\n       console.log(error)\r\n"
                },
                {
                    "date": 1636920519383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n         headers: {\r\n           'Content-Type': 'application/json',\r\n           'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n         },\r\n-        body: JSON.stringify({ title: 'React POST Request Example' })\r\n+        body: JSON.stringify({ update: false })\r\n       };\r\n       fetch(\"http://localhost:8090/payment/view\", requestOptions).then((response) => response.json()).then((response) => {\r\n         this.setState({ ...this.state, payments: response?.executions });\r\n       }\r\n"
                },
                {
                    "date": 1636921342163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,45 +53,45 @@\n                 <Col sm={2}>\r\n                   <p >BUYSELL</p>\r\n                 </Col>\r\n                 <Col sm={2}>\r\n-                  <p className=\"text-info\">BUY<span>|</span>SELL</p>\r\n+                  <p className=\"text-info\">STATUS</p>\r\n                 </Col>\r\n                 <Col sm={2}>\r\n-                  <p className=\"text-warning\">RATE</p>\r\n+                  <p className=\"text-warning\">PLISID</p>\r\n                 </Col>\r\n                 <Col sm={2}>\r\n-                  <p className=\"text-primary\">PAGO</p>\r\n+                  <p className=\"text-primary\">Total USD</p>\r\n                 </Col>\r\n                 <Col sm={2}>\r\n-                  <p className=\"text-lime\">CVN</p>\r\n+                  <p className=\"text-lime\">Total PLIS</p>\r\n                 </Col>\r\n                 <Col sm={2}>\r\n-                  <p className=\"text-success\">PYMT</p>\r\n+                  <p className=\"text-success\">batchTxt</p>\r\n                 </Col>\r\n               </Row>\r\n               {this.state.payments.map(p =>\r\n               (\r\n                 <Row>\r\n                   <Col sm={2}>\r\n                     <p\r\n                       onClick={(e) => this.view(e, p)}\r\n-                      className={`${p.bpyPymtPaymentId ? \"text-success\" : \"text-danger\"}`}>{p.bpyCurrencyQty}{p.bpyCurrencyQty2}</p>\r\n+                      className={`${p.bpyPymtPaymentId ? \"text-success\" : \"text-danger\"}`}>{p.symbol}</p>\r\n                   </Col>\r\n                   <Col sm={2}>\r\n-                    <p className=\"text-info\">{p.bpyOrderQty1}<span>|</span>{p.bpyOrderQty2}</p>\r\n+                    <p className=\"text-info\">{p.texto}</p>\r\n                   </Col>\r\n                   <Col sm={2}>\r\n-                    <p className=\"text-warning\">{p.bpyCvnAgreedRate}</p>\r\n+                    <p className=\"text-warning\">{p.account}</p>\r\n                   </Col>\r\n                   <Col sm={2}>\r\n-                    <p className={`${p.bpyPymtAmount ? \"text-primary\" : \"text-danger\"}`}>{p.bpyPymtAmount}</p>\r\n+                    <p className={`${p.orderQty ? \"text-primary\" : \"text-danger\"}`}>{p.orderQty}</p>\r\n                   </Col>\r\n                   <Col sm={2}>\r\n-                    <p className={`${p.bpyCvnConversionId ? \"text-lime\" : \"text-danger\"}`}>{p.bpyCvnConversionId}</p>\r\n+                    <p className={`${p.orderQty2 ? \"text-lime\" : \"text-danger\"}`}>{p.orderQty2}</p>\r\n                   </Col>\r\n                   <Col sm={2}>\r\n-                    <p className=\"text-success\">{p.bpyPymtPaymentId}</p>\r\n+                    <p className=\"text-success\">{p.batchTxt}</p>\r\n                   </Col>\r\n                 </Row>\r\n               )\r\n               )}\r\n"
                },
                {
                    "date": 1636926323193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,19 @@\n               )}\r\n             </div>\r\n           </Widget>\r\n         </Col>\r\n+\r\n         <Col xs={12} lg={6}>\r\n+          <td className=\"width-150\">\r\n+            <Progress\r\n+              color={row.progress.colorClass}\r\n+              value={row.progress.percent}\r\n+              className=\"progress-sm mb-xs\"\r\n+            />\r\n+          </td>\r\n+        </Col>\r\n+        <Col xs={12} lg={6}>\r\n           <Widget\r\n             title={\r\n               <h5>\r\n                 Desembolso con estado<small className=\"text-muted\">{this.state.payment?.bpyStatusId}</small>\r\n"
                },
                {
                    "date": 1636926403669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from \"react\";\r\n-import { Row, Col } from \"reactstrap\";\r\n+import { Row, Col, Progress } from \"reactstrap\";\r\n import AnimateNumber from \"react-animated-number\";\r\n import Widget from \"../../components/Widget\";\r\n import { Button } from \"@amcharts/amcharts4/core\";\r\n \r\n@@ -101,10 +101,10 @@\n \r\n         <Col xs={12} lg={6}>\r\n           <td className=\"width-150\">\r\n             <Progress\r\n-              color={row.progress.colorClass}\r\n-              value={row.progress.percent}\r\n+              color={red}\r\n+              value={10}\r\n               className=\"progress-sm mb-xs\"\r\n             />\r\n           </td>\r\n         </Col>\r\n"
                },
                {
                    "date": 1636926438022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n \r\n         <Col xs={12} lg={6}>\r\n           <td className=\"width-150\">\r\n             <Progress\r\n-              color={red}\r\n+              color=\"red\"\r\n               value={10}\r\n               className=\"progress-sm mb-xs\"\r\n             />\r\n           </td>\r\n"
                },
                {
                    "date": 1636926479857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,15 +99,13 @@\n           </Widget>\r\n         </Col>\r\n \r\n         <Col xs={12} lg={6}>\r\n-          <td className=\"width-150\">\r\n             <Progress\r\n               color=\"red\"\r\n               value={10}\r\n               className=\"progress-sm mb-xs\"\r\n             />\r\n-          </td>\r\n         </Col>\r\n         <Col xs={12} lg={6}>\r\n           <Widget\r\n             title={\r\n"
                }
            ],
            "date": 1636912036521,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport AnimateNumber from \"react-animated-number\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Button } from \"@amcharts/amcharts4/core\";\r\n\r\nclass Typography extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      payment: undefined,\r\n      payments: []\r\n    };\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json'\r\n      'Authentication': 'Bearer '+localStorage.getItem('token') },\r\n      body: JSON.stringify({ title: 'React POST Request Example' })\r\n    };\r\n    fetch(\"http://localhost:8090/payment/view\", requestOptions).then((response) => response.json()).then((response) => {\r\n      this.setState({ ...this.state, payments: response });\r\n    }\r\n    );\r\n  }\r\n  render() {\r\n    return (<div>\r\n      <h1 className=\"page-title\">\r\n        Envios - <span className=\"fw-semi-bold\">Historial de envios </span>\r\n      </h1>\r\n      <Row>\r\n        <Col xs={12} lg={6}>\r\n          <Widget\r\n            title={\r\n              <h5>\r\n                Envios {\" \"}\r\n                <small className=\"text-muted\">de lotes</small>\r\n              </h5>\r\n            }\r\n            close\r\n            collapse\r\n          >\r\n            <h4>Reciente {this.state.payments?.length}</h4>\r\n            <p>Lo último enviado <AnimateNumber value={this.state.payments?.length} /></p>\r\n            <div className=\"widget-padding-md w-100 h-100 text-left border rounded\">\r\n\r\n              <Row>\r\n                <Col sm={2}>\r\n                  <p >BUYSELL</p>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <p className=\"text-info\">BUY<span>|</span>SELL</p>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <p className=\"text-warning\">RATE</p>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <p className=\"text-primary\">PAGO</p>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <p className=\"text-lime\">CVN</p>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <p className=\"text-success\">PYMT</p>\r\n                </Col>\r\n              </Row>\r\n              {this.state.payments.map(p =>\r\n              (\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <p\r\n                      onClick={(e) => this.view(e, p)}\r\n                      className={`${p.bpyPymtPaymentId ? \"text-success\" : \"text-danger\"}`}>{p.bpyCurrencyQty}{p.bpyCurrencyQty2}</p>\r\n                  </Col>\r\n                  <Col sm={2}>\r\n                    <p className=\"text-info\">{p.bpyOrderQty1}<span>|</span>{p.bpyOrderQty2}</p>\r\n                  </Col>\r\n                  <Col sm={2}>\r\n                    <p className=\"text-warning\">{p.bpyCvnAgreedRate}</p>\r\n                  </Col>\r\n                  <Col sm={2}>\r\n                    <p className={`${p.bpyPymtAmount ? \"text-primary\" : \"text-danger\"}`}>{p.bpyPymtAmount}</p>\r\n                  </Col>\r\n                  <Col sm={2}>\r\n                    <p className={`${p.bpyCvnConversionId ? \"text-lime\" : \"text-danger\"}`}>{p.bpyCvnConversionId}</p>\r\n                  </Col>\r\n                  <Col sm={2}>\r\n                    <p className=\"text-success\">{p.bpyPymtPaymentId}</p>\r\n                  </Col>\r\n                </Row>\r\n              )\r\n              )}\r\n            </div>\r\n          </Widget>\r\n        </Col>\r\n        <Col xs={12} lg={6}>\r\n          <Widget\r\n            title={\r\n              <h5>\r\n                Desembolso con estado<small className=\"text-muted\">{this.state.payment?.bpyStatusId}</small>\r\n              </h5>\r\n            }\r\n            close\r\n            collapse\r\n          >\r\n            <h4>{this.state.payment?.bpyCurrencyQty}{this.state.payment?.bpyCurrencyQty2}</h4>\r\n            <p>Re-enviar</p>\r\n            <div className=\"widget-padding-md w-100 h-100 text-left border rounded\">\r\n              <textarea value={JSON.stringify(this.state.payment, null, 2)} cols=\"60\" rows=\"55\" ></textarea>\r\n            </div>\r\n          </Widget>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  view = (e, p) => {\r\n    e.preventDefault();\r\n    this.setState({ payment: p });\r\n  };\r\n}\r\n\r\nexport default Typography;\r\n"
        }
    ]
}