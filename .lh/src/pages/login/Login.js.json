{
    "sourceFile": "src/pages/login/Login.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1636835087954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1636835576039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import { Container, Alert, Button, FormGroup, Label, InputGroup, InputGroupAddon, Input, InputGroupText } from 'reactstrap';\r\n import Widget from '../../components/Widget';\r\n import { loginUser } from '../../actions/user';\r\n import microsoft from '../../assets/microsoft.png';\r\n+import { useOperation } from 'react-openapi-client';\r\n \r\n class Login extends React.Component {\r\n     static propTypes = {\r\n         dispatch: PropTypes.func.isRequired,\r\n"
                },
                {
                    "date": 1636852175800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n import { Container, Alert, Button, FormGroup, Label, InputGroup, InputGroupAddon, Input, InputGroupText } from 'reactstrap';\r\n import Widget from '../../components/Widget';\r\n import { loginUser } from '../../actions/user';\r\n import microsoft from '../../assets/microsoft.png';\r\n-import { useOperation } from 'react-openapi-client';\r\n \r\n class Login extends React.Component {\r\n     static propTypes = {\r\n         dispatch: PropTypes.func.isRequired,\r\n@@ -40,10 +39,8 @@\n     }\r\n \r\n     doLogin(e) {\r\n         e.preventDefault();\r\n-        \r\n-        const { loading, data, error } = useOperation('authenticate', { username: 'LURM', password: 'password' });\r\n         this.props.dispatch(loginUser({ email: this.state.email, password: this.state.password }));\r\n     }\r\n \r\n     signUp() {\r\n"
                }
            ],
            "date": 1636835087954,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter, Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Alert, Button, FormGroup, Label, InputGroup, InputGroupAddon, Input, InputGroupText } from 'reactstrap';\r\nimport Widget from '../../components/Widget';\r\nimport { loginUser } from '../../actions/user';\r\nimport microsoft from '../../assets/microsoft.png';\r\n\r\nclass Login extends React.Component {\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired,\r\n    };\r\n\r\n    static isAuthenticated(token) {\r\n        if (token) return true;\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: 'admin@flatlogic.com',\r\n            password: 'password',\r\n        };\r\n\r\n        this.doLogin = this.doLogin.bind(this);\r\n        this.changeEmail = this.changeEmail.bind(this);\r\n        this.changePassword = this.changePassword.bind(this);\r\n        this.signUp = this.signUp.bind(this);\r\n    }\r\n\r\n    changeEmail(event) {\r\n        this.setState({ email: event.target.value });\r\n    }\r\n\r\n    changePassword(event) {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    doLogin(e) {\r\n        e.preventDefault();\r\n        \r\n        const { loading, data, error } = useOperation('authenticate', { username: 'LURM', password: 'password' });\r\n        this.props.dispatch(loginUser({ email: this.state.email, password: this.state.password }));\r\n    }\r\n\r\n    signUp() {\r\n        this.props.history.push('/register');\r\n    }\r\n\r\n    render() {\r\n        const { from } = this.props.location.state || { from: { pathname: '/app' } }; // eslint-disable-line\r\n\r\n        // cant access login page while logged in\r\n        if (Login.isAuthenticated(JSON.parse(localStorage.getItem('authenticated')))) {\r\n            return (\r\n                <Redirect to={from} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"auth-page\">\r\n                <Container>\r\n                    <Widget className=\"widget-auth mx-auto\" title={<h3 className=\"mt-0\">Login to your Web App</h3>}>\r\n                        <p className=\"widget-auth-info\">\r\n                            Use your email to sign in.\r\n                        </p>\r\n                        <form onSubmit={this.doLogin}>\r\n                            {\r\n                                this.props.errorMessage && (\r\n                                    <Alert className=\"alert-sm widget-middle-overflow rounded-0\" color=\"danger\">\r\n                                        {this.props.errorMessage}\r\n                                    </Alert>\r\n                                )\r\n                            }\r\n                            <FormGroup className=\"mt\">\r\n                                <Label for=\"email\">Email</Label>\r\n                                <InputGroup className=\"input-group-no-border\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"la la-user text-white\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input id=\"email\" className=\"input-transparent pl-3\" value={this.state.email} onChange={this.changeEmail} type=\"email\"\r\n                                           required name=\"email\" placeholder=\"Email\"/>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"password\">Password</Label>\r\n                                <InputGroup className=\"input-group-no-border\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"la la-lock text-white\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input id=\"password\" className=\"input-transparent pl-3\" value={this.state.password}\r\n                                           onChange={this.changePassword} type=\"password\"\r\n                                           required name=\"password\" placeholder=\"Password\"/>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <div className=\"bg-widget auth-widget-footer\">\r\n                                <Button type=\"submit\" color=\"danger\" className=\"auth-btn\"\r\n                                        size=\"sm\" style={{color: '#fff'}}>\r\n                                  <span className=\"auth-btn-circle\" style={{marginRight: 8}}>\r\n                                    <i className=\"la la-caret-right\"/>\r\n                                  </span>\r\n                                  {this.props.isFetching ? 'Loading...' : 'Login'}\r\n                                </Button>\r\n                                <p className=\"widget-auth-info mt-4\">\r\n                                    Don't have an account? Sign up now!\r\n                                </p>\r\n                                <Link className=\"d-block text-center mb-4\" to=\"register\">Create an Account</Link>\r\n                                <div className=\"social-buttons\">\r\n                                    <Button color=\"primary\" className=\"social-button\">\r\n                                        <i className=\"social-icon social-google\"/>\r\n                                        <p className=\"social-text\">GOOGLE</p>\r\n                                    </Button>\r\n                                    <Button color=\"success\" className=\"social-button\">\r\n                                        <i className=\"social-icon social-microsoft\"\r\n                                           style={{backgroundImage: `url(${microsoft})`}}/>\r\n                                        <p className=\"social-text\" style={{color: '#fff'}}>MICROSOFT</p>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Widget>\r\n                </Container>\r\n                <footer className=\"auth-footer\">\r\n                {new Date().getFullYear()} &copy; CTD - <a href=\"https://www.colfuturo.org/\" >COLFUTURO</a>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isFetching: state.auth.isFetching,\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        errorMessage: state.auth.errorMessage,\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Login));\r\n\r\n"
        }
    ]
}